[USER-DEFINED]
# Variable $IP_AUTO attempts to auto-discover IP address
MANAGER_IP = $IP_AUTO
MAIN_UPDATE_FREQUENCY = 5
MAIN_UPDATE_ATTEMPTS = 36
MAIN_NOTIFICATION = $False
MAIN_ATTEMPTS = 3
MAIN_TIMEOUT = 240
# Variable $USER auto-selects current username
MAIN_USERNAME = $USER_AUTO
# Name of the ssh key pair (two files are supposed to exist inside the 
# "credentials" directory, bogus_id_rsa and bogus_id_rsa.pub
MAIN_SSH_KEY_NAME = bogus_id_rsa
# This is the username created inside the VMs
MAIN_LOGIN = klabuser
# Variable $PATH_TO_TOOL attempts to auto-selects the appropriate path 
MAIN_BASE_DIR = $PATH_TO_TOOL

# Which cloud to pick first when the tool first starts
STARTUP_CLOUD = MYSIMCLOUD

# List the clouds you want to define
CLOUDOPTION_MYSIMCLOUD = cldattach sim, vmcattach all
CLOUDOPTION_MYOPENSTACK = cldattach osk, vmcattach all
CLOUDOPTION_MYAMAZON = cldattach ec2, vmcattach all
CLOUDOPTION_MYVCD = cldattach vcd, vmcattach all
CLOUDOPTION_MYPLM = cldattach plm, vmcattach all
CLOUDOPTION_MYSLR = cldattach slr, vmcattach all
CLOUDOPTION_MYGCE = cldattach gce, vmcattach all
CLOUDOPTION_MYDO = cldattach do, vmcattach all
CLOUDOPTION_MYPDM = cldattach pdm, vmcattach all
CLOUDOPTION_MYPCM = cldattach pcm, vmcattach all
CLOUDOPTION_MYKUB = cldattach kub, vmcattach all

# Now, Specify the individual parameters for each cloud
#-------------------------------------------------------------------------------
# Smart Cloud Provisioning (SCP) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYSIMCLOUD]
SIM_INITIAL_VMCS = simzone_a:sut,simzone_b:lg
SIM_SSH_KEY_NAME = cbtool_rsa
SIM_KEY_NAME = cbtool_rsa 
SIM_SECURITY_GROUPS = simsecgrp
SIM_LOGIN = cbuser
#-------------------------------------------------------------------------------
# OpenStack (OSK) requires the following parameters (replace everything between <>, *including* the signs!)
[USER-DEFINED : CLOUDOPTION_MYOPENSTACK]
OSK_ACCESS = http://<address>:5000/v2.0/                   # Address of controlled node (where nova-api runs)
OSK_CREDENTIALS =  <user>-<password>-<tenant>
OSK_SECURITY_GROUPS = default	                           # Make sure that this group exists first
OSK_INITIAL_VMCS = RegionOne:sut                           # Change "RegionOne" accordingly
OSK_LOGIN = cbuser                                         # The username that logins on the VMs
#-------------------------------------------------------------------------------
# Elastic Compute Cloud (EC2) requires the following parameters 
[USER-DEFINED : CLOUDOPTION_MYAMAZON]
EC2_ACCESS = ABCDEFGHIJKLMNOPQRST                          # This is the AWS access key id
EC2_SECURITY_GROUPS = cloudbench                           # Make sure that this group exists first 
EC2_CREDENTIALS = ABCDEFGHIJKLMNOPQRSTUVXYWZ01234567890-+* # This is the AWS secret access key 
EC2_KEY_NAME = cbtool_rsa                                  # Make sure that this key exists first 
EC2_INITIAL_VMCS = us-east-1:sut                           # Change "us-east-1" accordingly
EC2_SSH_KEY_NAME = cbtool_rsa                              # Name of the private key used to login on the VMs
EC2_LOGIN = cbuser                                         # The username that logins on the VMs
#-------------------------------------------------------------------------------
# vCloud Director requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYVCD]
VCD_ACCESS = 10.1.1.1                                      # IP address or host name for vCloud Director API
VCD_CREDENTIALS = happyguy@DeployPlace;password            # username to log into vCloud Director API
VCD_KEY_NAME = xxxxx                                       # password to log into vCloud Director API (same as above)
VCD_SECURITY_GROUPS = none                                 # Not used in vCloud Director, but required by CloudBench
VCD_INITIAL_VMCS = DeployPlace                             # vCloud Director instance name
VCD_SSH_KEY_NAME = cbtool_rsa                              # Private key used to SSH into VMs
VCD_LOGIN = cbuser                                         # Username associated with the private key above
VCD_SNMP_VERSION = 1
VCD_SNMP_PASSWORD = dummy
VCD_SNMP_COMMUNITY = cbtest
VCD_SNMP_VARIABLE = SNMPv2-MIB::sysLocation
#-------------------------------------------------------------------------------
# Parallel Libvirt Manager (PLM) requires the following parameters 
[USER-DEFINED : CLOUDOPTION_MYPLM]
PLM_ACCESS = <address>:6060
PLM_INITIAL_VMCS = grouptwo:sut
PLM_SSH_KEY_NAME = cbtool_rsa
PLM_LOGIN = cbuser
#-------------------------------------------------------------------------------
# SoftLayer (SLR) requires the following parameters 
[USER-DEFINED : CLOUDOPTION_MYSLR ]
SLR_ACCESS = private                                                                            # Leave "private" if you are running inside SoftLayer
SLR_CREDENTIALS = <username>-ABCDEFGHIJKLMNOPQRSTUVXYWZ01234567890-+*0123456789001234567890-cci # User and API access key can be obtained from https://manage.softlayer.com/Administrative/apiKeychain
SLR_LOGIN = cbuser                                                                              # The username that logins on the VMs
SLR_INITIAL_VMCS = dal05                                                                        # Select the appropriate SoftLayer datacenter
#-------------------------------------------------------------------------------
[USER-DEFINED : CLOUDOPTION_MYGCE ]
GCE_ACCESS = project_name_for_images,project_name_for_instances  # Obtained with "gcloud info".
GCE_SECURITY_GROUPS = cloudbench                           # Currently, not used
GCE_CREDENTIALS = ABCDEFGHIJKLMNOPQRSTUVXYWZ01234567890-+* # Currently, not used
GCE_INITIAL_VMCS = us-east1-b:sut                          # Change "us-east1-b" accordingly
GCE_LOGIN = cbuser                                         # The username that logins on the VMs
#-------------------------------------------------------------------------------
# DigitalOcean (DO) requires the following parameters
[USER-DEFINED : CLOUDOPTION_MYDIGITALOCEAN]
DO_INITIAL_VMCS = tor1:sut                                                                       # VMC == DO data center (we don't have availability zones yet)
DO_CREDENTIALS = long_hex_token_from_digitalocean.com:arbitrarytag1;another_token:arbitrarytag2  # This is your DO access token. The driver supports multiple accounts and will distribute AIs across all accounts in a round-robin fashion.
DO_SSH_KEY_NAME = cbtool_rsa                                                                     # Either upload credentials/cbtool_rsa.pub to DO or tell us where your private key is
DO_KEY_NAME = key_name_from_digitialocean.com                                                    # Comma-separated list of IDs (or names) of your DO ssh keys
DO_LOGIN = root                                                                                  # The username that logins on the VMs
#-------------------------------------------------------------------------------
[USER-DEFINED : CLOUDOPTION_MYPDM ]
PDM_INITIAL_VMCS = world                                 # This really does not matter, could be anything
PDM_CREDENTIALS = NOTUSED                                # Currently not used
PDM_ACCESS = tcp://<address>:2375,tcp://<address>:2375   # A comma-separated list of Docker hosts (usually port 2375) or a single Swarm host (usually port 5001)
PDM_NETNAME = bridge                                     # The name of an already existing network on Docker
PDM_LOGIN = cbuser                                       # The username that logins on the VMs
#-------------------------------------------------------------------------------
[USER-DEFINED : CLOUDOPTION_MYPCM ]
PCM_INITIAL_VMCS = world                                   # This really does not matter, could be anything
PCM_CREDENTIALS = trustpassword                            # LXD's "trust password"
PCM_ACCESS = https://<address>:8443,https://<address>:8443 # A comma-separated list of LXD hosts (usually port 8443)
PCM_NETNAME = lxdbr0                                       # The name of an already existing network on LXD
PCM_LOGIN = cbuser                                         # The username that logins on the VMs
#-------------------------------------------------------------------------------
[USER-DEFINED : CLOUDOPTION_MYKUB ]
KUB_INITIAL_VMCS = world                                 # This really does not matter, could be anything
KUB_CREDENTIALS = NOTUSED                                # Currently not used
KUB_ACCESS = ~/.kube/config                              # The full path to the kubernetes configuration file
KUB_NETNAME = NOTUSED                                    # Currently not used
KUB_LOGIN = root                                         # The username that logins on the VMs
#-------------------------------------------------------------------------------

[OBJECTSTORE]
USAGE = shared

[METRICSTORE]
USAGE = shared

[API_DEFAULTS]
PORT = 7070

[GUI_DEFAULTS]
BRANDING = favicon.ico,20,http://localhost
PORT = 8080
